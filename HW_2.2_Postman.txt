http://162.55.220.72:5005/user_info_2
1. Вставить параметр salary из окружения в request
2. Вставить параметр age из окружения в age
3. Вставить параметр name из окружения в name
#pm.collectionVariables.get("HW_1");

4. Отправить запрос.
5. Статус код 200
pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});
6. Спарсить response body в json.
7. Спарсить request.
#let jsonData = pm.response.json()
let reg = request.data

8. Проверить, что json response имеет параметр start_qa_salary
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData)).to.include("start_qa_salary");
});
9. Проверить, что json response имеет параметр qa_salary_after_6_months
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData)).to.include("qa_salary_after_6_months");
});


10. Проверить, что json response имеет параметр qa_salary_after_12_months
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData)).to.include("qa_salary_after_12_months");
});


11. Проверить, что json response имеет параметр qa_salary_after_1.5_year
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData)).to.include("qa_salary_after_1.5_months");
});


12. Проверить, что json response имеет параметр qa_salary_after_3.5_years
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData)).to.include("qa_salary_after_3.5_months");
});


13. Проверить, что json response имеет параметр person
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData)).to.include("qa_salary_after_person_months");
});

14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData.start_qa_salary)).to.include(req.salary);
});

15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData.qa_salary_after_6)).to.include(req.salary*2);


16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData.qa_salary_after_12_months)).to.include(req.salary*2.7);



17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData.qa_salary_after_1.5_year)).to.include(req.salary*3.3);



18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData.a_salary_after_3.5_years)).to.include(req.salary*3.8);



19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData.person.u_name[0])).to.include(req.name);
});


20. Проверить, что что параметр u_age равен age из request (age забрать из request.)
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData.person.u_age)).to.include(req.age);



21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)
#pm.test("Body matches string", function () {
    pm.expect(JSON.stringify(jsonData.person.u_salary_5_years)).to.include(req.salary*4.2);



22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.

#for (let i in jsonData.person){
 console.log( i,jsonData.person[i])
                               };